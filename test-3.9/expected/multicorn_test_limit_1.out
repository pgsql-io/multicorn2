SET client_min_messages=NOTICE;
CREATE EXTENSION multicorn;
CREATE server multicorn_srv foreign data wrapper multicorn options (
    wrapper 'multicorn.testfdw.TestForeignDataWrapper'
);
CREATE user mapping FOR current_user server multicorn_srv options (usermapping 'test');
CREATE foreign table testmulticorn (
    test1 date,
    test2 timestamp
) server multicorn_srv options (
    option1 'option1',
    test_type 'date',
    canlimit 'true',
    cansort 'true'
);
CREATE foreign table testmulticorn_nolimit(
    test1 date,
    test2 timestamp
) server multicorn_srv options (
    option1 'option1',
    test_type 'date',
    canlimit 'false',
    cansort 'true'
);
CREATE foreign table testmulticorn_nosort(
    test1 date,
    test2 timestamp
) server multicorn_srv options (
    option1 'option1',
    test_type 'date',
    canlimit 'true',
    cansort 'false'
);
-- Verify limit and offset are not pushed down when FWD says "no" (but still returns the 1 correct row)
EXPLAIN SELECT * FROM testmulticorn_nolimit LIMIT 1 OFFSET 1;
NOTICE:  [('canlimit', 'false'), ('cansort', 'true'), ('option1', 'option1'), ('test_type', 'date'), ('usermapping', 'test')]
NOTICE:  [('test1', 'date'), ('test2', 'timestamp without time zone')]
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Limit  (cost=29.50..49.00 rows=1 width=20)
   ->  Foreign Scan on testmulticorn_nolimit  (cost=10.00..400.00 rows=20 width=20)
(2 rows)

SELECT * FROM testmulticorn_nolimit LIMIT 1 OFFSET 1;
NOTICE:  []
NOTICE:  ['test1', 'test2']
   test1    |          test2           
------------+--------------------------
 02-03-2011 | Tue Feb 01 14:30:25 2011
(1 row)

-- Verify limit and offset are pushed down when FWD says "yes" (returns just 1 row with proper cost)
EXPLAIN SELECT * FROM testmulticorn LIMIT 1 OFFSET 1;
NOTICE:  [('canlimit', 'true'), ('cansort', 'true'), ('option1', 'option1'), ('test_type', 'date'), ('usermapping', 'test')]
NOTICE:  [('test1', 'date'), ('test2', 'timestamp without time zone')]
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on testmulticorn  (cost=10.00..20.00 rows=1 width=20)
(1 row)

SELECT * FROM testmulticorn LIMIT 1 OFFSET 1;
NOTICE:  []
NOTICE:  ['test1', 'test2']
   test1    |          test2           
------------+--------------------------
 02-03-2011 | Tue Feb 01 14:30:25 2011
(1 row)

-- Verify limit and offset w/ sort not pushed down (still returns the 1 correct row)
EXPLAIN SELECT * FROM testmulticorn_nolimit ORDER BY test1 LIMIT 1 OFFSET 1;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Limit  (cost=29.50..49.00 rows=1 width=20)
   ->  Foreign Scan on testmulticorn_nolimit  (cost=10.00..400.00 rows=20 width=20)
(2 rows)

SELECT * FROM testmulticorn_nolimit ORDER BY test1 LIMIT 1 OFFSET 1;
NOTICE:  []
NOTICE:  ['test1', 'test2']
NOTICE:  requested sort(s): 
NOTICE:  SortKey(attname='test1', attnum=1, is_reversed=False, nulls_first=False, collate=None)
   test1    |          test2           
------------+--------------------------
 01-01-2011 | Sun Jan 02 14:30:25 2011
(1 row)

-- Verify limit and offset w/ sort are pushed down (returns just 1 row with proper cost)
EXPLAIN SELECT * FROM testmulticorn ORDER BY test1 LIMIT 1 OFFSET 1;
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on testmulticorn  (cost=10.00..20.00 rows=1 width=20)
(1 row)

SELECT * FROM testmulticorn ORDER BY test1 LIMIT 1 OFFSET 1;
NOTICE:  []
NOTICE:  ['test1', 'test2']
NOTICE:  requested sort(s): 
NOTICE:  SortKey(attname='test1', attnum=1, is_reversed=False, nulls_first=False, collate=None)
   test1    |          test2           
------------+--------------------------
 01-01-2011 | Sun Jan 02 14:30:25 2011
(1 row)

-- Verify limit and offset are not pushed when sort is not pushed down
EXPLAIN SELECT * FROM testmulticorn_nosort ORDER BY test1 LIMIT 1 OFFSET 1;
NOTICE:  [('canlimit', 'true'), ('cansort', 'false'), ('option1', 'option1'), ('test_type', 'date'), ('usermapping', 'test')]
NOTICE:  [('test1', 'date'), ('test2', 'timestamp without time zone')]
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Limit  (cost=400.20..400.20 rows=1 width=12)
   ->  Sort  (cost=400.20..400.25 rows=20 width=12)
         Sort Key: test1
         ->  Foreign Scan on testmulticorn_nosort  (cost=10.00..400.00 rows=20 width=20)
(4 rows)

SELECT * FROM testmulticorn_nosort ORDER BY test1 LIMIT 1 OFFSET 1;
NOTICE:  []
NOTICE:  ['test1', 'test2']
   test1    |          test2           
------------+--------------------------
 01-01-2011 | Sun Jan 02 14:30:25 2011
(1 row)

-- Verify limit and offset are not pushed when sort is partially pushed down
EXPLAIN SELECT * FROM testmulticorn ORDER BY test1, test2 LIMIT 1 OFFSET 1;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=48.08..66.65 rows=1 width=12)
   ->  Incremental Sort  (cost=29.51..400.90 rows=20 width=12)
         Sort Key: test1, test2
         Presorted Key: test1
         ->  Foreign Scan on testmulticorn  (cost=10.00..400.00 rows=20 width=20)
(5 rows)

SELECT * FROM testmulticorn ORDER BY test1, test2 LIMIT 1 OFFSET 1;
NOTICE:  []
NOTICE:  ['test1', 'test2']
NOTICE:  requested sort(s): 
NOTICE:  SortKey(attname='test1', attnum=1, is_reversed=False, nulls_first=False, collate=None)
   test1    |          test2           
------------+--------------------------
 01-01-2011 | Sun Jan 02 14:30:25 2011
(1 row)

-- Verify limit and offset are not pushed down with where (which we may eventually support in the future)
EXPLAIN SELECT * FROM testmulticorn WHERE test1 = '02-03-2011' LIMIT 1 OFFSET 1;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Limit  (cost=29.50..49.00 rows=1 width=20)
   ->  Foreign Scan on testmulticorn  (cost=10.00..400.00 rows=20 width=20)
         Filter: (test1 = '02-03-2011'::date)
(3 rows)

SELECT * FROM testmulticorn WHERE test1 = '02-03-2011' LIMIT 1 OFFSET 1;
NOTICE:  [test1 = 2011-02-03]
NOTICE:  ['test1', 'test2']
   test1    |          test2           
------------+--------------------------
 02-03-2011 | Tue Feb 01 14:30:25 2011
(1 row)

-- Verify limit and offset are not pushed down with group by
EXPLAIN SELECT max(test1) FROM testmulticorn GROUP BY test1 LIMIT 1 OFFSET 1;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=19.52..29.03 rows=1 width=8)
   ->  GroupAggregate  (cost=10.00..200.30 rows=20 width=8)
         Group Key: test1
         ->  Foreign Scan on testmulticorn  (cost=10.00..200.00 rows=20 width=10)
(4 rows)

SELECT max(test1) FROM testmulticorn GROUP BY test1 LIMIT 1 OFFSET 1;
NOTICE:  []
NOTICE:  ['test1']
NOTICE:  requested sort(s): 
NOTICE:  SortKey(attname='test1', attnum=1, is_reversed=False, nulls_first=False, collate=None)
    max     
------------
 02-03-2011
(1 row)

-- Verify limit and offset are not pushed down with window functions
EXPLAIN SELECT max(test1) OVER (ORDER BY test1) FROM testmulticorn LIMIT 1 OFFSET 1;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Limit  (cost=19.52..29.03 rows=1 width=8)
   ->  WindowAgg  (cost=10.00..200.30 rows=20 width=8)
         ->  Foreign Scan on testmulticorn  (cost=10.00..200.00 rows=20 width=10)
(3 rows)

SELECT max(test1) OVER (ORDER BY test1) FROM testmulticorn LIMIT 1 OFFSET 1;
NOTICE:  []
NOTICE:  ['test1']
NOTICE:  requested sort(s): 
NOTICE:  SortKey(attname='test1', attnum=1, is_reversed=False, nulls_first=False, collate=None)
    max     
------------
 01-01-2011
(1 row)

-- Verify limit and offset are not pushed down with joins 
-- TODO: optimize by pushing down limit/offset on one side of the join
EXPLAIN SELECT * FROM testmulticorn m1 JOIN testmulticorn m2 ON m1.test1 = m2.test1 LIMIT 1 OFFSET 1;
                                        QUERY PLAN                                         
-------------------------------------------------------------------------------------------
 Limit  (cost=59.30..98.61 rows=1 width=24)
   ->  Nested Loop  (cost=20.00..806.05 rows=20 width=24)
         Join Filter: (m1.test1 = m2.test1)
         ->  Foreign Scan on testmulticorn m1  (cost=10.00..400.00 rows=20 width=20)
         ->  Materialize  (cost=10.00..400.10 rows=20 width=20)
               ->  Foreign Scan on testmulticorn m2  (cost=10.00..400.00 rows=20 width=20)
(6 rows)

SELECT * FROM testmulticorn m1 JOIN testmulticorn m2 ON m1.test1 = m2.test1 LIMIT 1 OFFSET 1;
NOTICE:  []
NOTICE:  ['test1', 'test2']
NOTICE:  []
NOTICE:  ['test1', 'test2']
   test1    |          test2           |   test1    |          test2           
------------+--------------------------+------------+--------------------------
 01-01-2011 | Sun Jan 02 14:30:25 2011 | 01-01-2011 | Sun Jan 02 14:30:25 2011
(1 row)

DROP USER MAPPING FOR current_user SERVER multicorn_srv;
DROP EXTENSION multicorn cascade;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to server multicorn_srv
drop cascades to foreign table testmulticorn
drop cascades to foreign table testmulticorn_nolimit
drop cascades to foreign table testmulticorn_nosort
